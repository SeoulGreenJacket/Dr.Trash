version: '3.3'

services:
  ai:
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_SCHEMA: ${APPLICATION_SCHEMA}
      DB_USERNAME: ${APPLICATION_USERNAME}
      DB_PASSWORD: ${APPLICATION_PASSWORD}
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    build:
      context: ./Dr.Trash-AI
    networks:
      - default

  database:
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      APPLICATION_SCHEMA: ${APPLICATION_SCHEMA}
      APPLICATION_USERNAME: ${APPLICATION_USERNAME}
      APPLICATION_PASSWORD: ${APPLICATION_PASSWORD}
      DEVELOPER_USERNAME: developer
      DEVELOPER_PASSWORD: password
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - db-data:/var/lib/postgresql/data
    build:
      context: ./Dr.Trash-DB
    networks:
      - default

  cache:
    image: redis/redis-stack-server:6.2.4-v2
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - default

  http:
    environment:
      NODE_ENV: ${NODE_ENV}
      DATABASE_USER: ${APPLICATION_USERNAME}
      DATABASE_HOST: database
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_PASSWORD: ${APPLICATION_PASSWORD}
      DATABASE_PORT: 5432
      DATABASE_SCHEMA: ${APPLICATION_SCHEMA}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_EXPIRES_IN: ${JWT_ACCESS_EXPIRES_IN}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_CALLBACK_URL: ${KAKAO_CALLBACK_URL}
      REDIS_HOST: cache
      REDIS_PORT: 6379
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    ports:
      - target: 3000
        published: ${BACKEND_PORT}
        protocol: tcp
        mode: host
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./Dr.Trash-BE/src:/app/src:ro
    build:
      context: ./Dr.Trash-BE
    networks:
      - default
    depends_on:
      - database
      - cache

  file:
    ports:
      - target: 80
        published: ${STORAGE_PORT}
        protocol: tcp
        mode: host
    image: nginx:latest
    volumes:
      - ./Dr.Trash-FILE/images:/usr/share/nginx/html/images
      - ./Dr.Trash-FILE/videos:/usr/share/nginx/html/videos
    networks:
      - default

  zookeeper:
    image: bitnami/zookeeper
    volumes:
      - zookeeper-data:/bitnami
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka
    ports:
      - target: 29092
        published: ${KAFKA_PORT}
        protocol: tcp
        mode: host
    volumes:
      - kafka-data:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://${HOST_NAME}:29092
    depends_on:
      - zookeeper

volumes:
  db-data:
  zookeeper-data:
  kafka-data:
